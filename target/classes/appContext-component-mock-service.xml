<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:annotation-config />
	<context:component-scan
		base-package="com.xquant.platform.component.mock.dao,
		    com.xquant.platform.component.mock.service,
		    com.xquant.platform.component.mock.persist,
		    com.xquant.platform.component.mock.resolver" />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<context:property-placeholder location="classpath:sysconfig.properties" />

	<!--必须存在 -->
	<bean class="com.xQuant.base2.support.config.ConfigSupport" factory-method="getInstance">
		<property name="locations">
			<array>
				<!--路径、文件名称都由项目点自行决定，但必须存在以便后面配置系统参数使用 -->
				<value>classpath:sysconfig.properties</value>
			</array>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="name" value="trd_cams" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${ds.initialSize}" />
		<property name="minIdle" value="${ds.minIdle}" />
		<property name="maxActive" value="${ds.maxActive}" />
		<property name="maxWait" value="${ds.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}" />
		<property name="validationQuery" value="${ds.validationQuery}" />
	</bean>

	<!-- 定义Spring与MyBatis整合的控制操作，此时数据库的连接对象取得由Spring负责 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 配置所有资源文件的保存路径 -->
		<property name="mapperLocations" value="classpath*:sqlMapper/**/*.xml" />
		<property name="configurationProperties">
			<props>
				<prop key="dialect">${ds.dialect}</prop>
			</props>
		</property>
	</bean>

	<bean class="com.xquant.platform.component.spring.MybatisMapperScanner" />

	<!-- 定义数据库的事务控制 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean class="com.xquant.platform.component.compute.service.impl.ComputeServiceImpl" />
	<bean class="com.xquant.platform.component.service.pp.impl.ComputeEngineImpl" />
	<bean class="com.xquant.platform.component.trade.service.impl.SetTypeServiceImpl" />
	<bean class="com.xquant.platform.component.service.impl.StrategyFactoryDefaultImpl"></bean>
	<bean class="com.xquant.platform.component.service.facade.remote.impl.RemoteServiceFactoryDefaultImpl"></bean>
	<bean class="com.xquant.platform.component.lfp.facade.impl.FacadeLfpServiceImpl"></bean>
	<bean class="com.xquant.platform.component.lfp.service.impl.LfpSerivceWrapperImpl"></bean>
	<bean class="com.xquant.platform.component.lfp.service.impl.LfpVoteServiceImpl"></bean>
	<bean class="com.xquant.platform.component.lfp.service.impl.LfpService4EtlImpl"></bean>
	<bean class="com.xquant.platform.component.lfp.service.impl.LfpService4TpImpl"></bean>
	<bean class="com.xquant.platform.component.lfp.service.impl.LfpSignInServiceImpl"></bean>

</beans>

